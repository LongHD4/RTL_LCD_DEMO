/*
 *  analyzer.h
 *
 *  Created on: Feb 27, 2024
 */

#ifndef __ANALYZER__H_
#define __ANALYZER__H_

/******************************************************************************/

/******************************************************************************/
/*                              INCLUDE FILES                                 */
/******************************************************************************/

#include <stdint.h>
#include <TFT_eSPI.h>

/******************************************************************************/
/*                     EXPORTED TYPES and DEFINITIONS                         */
/******************************************************************************/

#define TFT_COLOR(x)    convert_rgb((((x) >> 16)&0xFF),(((x) >> 8)&0xFF),((x)&0xFF))

/******************************************************************************/
/*                              PRIVATE DATA                                  */
/******************************************************************************/



/******************************************************************************/
/*                              EXPORTED DATA                                 */
/******************************************************************************/



/******************************************************************************/
/*                                FUNCTIONS                                   */
/******************************************************************************/

/**
 * @brief  Return RGB565 color
 * @param  RGB values
 * @retval RGB565 value
 */
uint16_t convert_rgb(uint8_t red, uint8_t green, uint8_t blue);

/*!
 * @brief  Draw signal info
 * @param  TFT instance
 * @retval None
 */
void analyzer_draw_signal(TFT_eSPI &tft, uint8_t channel, int8_t rssi, char *mac);

/*!
 * @brief  Draw graph
 * @param  TFT instance
 * @retval None
 */
void analyzer_draw_graph(TFT_eSPI &tft);

/******************************************************************************/

#endif /* __ANALYZER__H_ */
